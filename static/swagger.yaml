openapi: 3.0.0
info:
  description: Python project to export from Bigquery to GCS
  version: 1.0.0
  title: Cloud Run Python
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
host: "$ENDPOINT_HOST"
x-google-backend:
  address: "$APPLICATION_URL"
  protocol: h2
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "key"
    in: "query"
  google_service_account:
    authorizationUrl: ""
    flow: "implicit"
    type: "oauth2"
    x-google-issuer: "$MY_SERVICE_ACCOUNT_ADDRESS"
    x-google-jwks_uri: "https://www.googleapis.com/robot/v1/metadata/x509/$MY_SERVICE_ACCOUNT_ADDRESS"
    x-google-audiences: "$AUD_URL"

servers:
  - url: /
tags:
  - name: Export to GCS
    description: API for exporting Bigquery table to GCS
paths:
  /export/{dataset_id}/{table_id}:
    parameters:
      - name: dataset_id
        in: path
        required: true
        description: ID the dataset in bigquery
        schema:
          type: string
      - name: table_id
        in: path
        required: true
        description: ID the table under the dataset in bigquery
        schema:
          type: string
    post:
      tags:
        - BQ to GCS
      summary: Export Bigquery table to a single CSV file
      requestBody:
        description: Export file post request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
        '400':
          description: Failed. Bad post data.
        '404':
          description: Failed. Wrong Arguments.
        '500':
          description: Internal Server Error.
components:
  schemas:
    Output:
      type: object
      properties:
        path:
          type: string
          format: string
        status:
          type: integer
          format: int32
    Input:
      type: object
      properties:
        project:
          type: string
          format: string
        bucket:
          type: string
          format: string
        location:
          type: string
          format: string
        with_header:
          type: string
          format: string
